@model ExampleB.Models.Dish
@using ExampleB.Controllers
@{
    ViewBag.Title = "DeleteDish";
   // Layout = "~/Views/Shared/_LayoutEdit.cshtml";
}

<div class="separator">
    Edit Dish
</div>
<div class="container body-content">
    <div style="margin-left:auto; margin-right:auto;">
        @using (Html.BeginForm("EditDish", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.id)

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Сalories, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Сalories, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Сalories, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">

                    <div class="col-md-10">
                        @Html.Label("Load new", htmlAttributes: new { @class = "control-label col-md-2" })
                        <input type="file" name="image1" id="file-1" class="inputfile inputfile-1 " data-multiple-caption="{count} files selected" multiple />
                        <label for="file-1" style="margin-left:20px"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="17" viewBox="0 0 20 17"><path d="M10 0l-5.2 4.9h3.3v5.1h3.8v-5.1h3.3l-5.2-4.9zm9.3 11.5l-3.2-2.1h-2l3.4 2.6h-3.5c-.1 0-.2.1-.2.1l-.8 2.3h-6l-.8-2.2c-.1-.1-.1-.2-.2-.2h-3.6l3.4-2.6h-2l-3.2 2.1c-.4.3-.7 1-.6 1.5l.6 3.1c.1.5.7.9 1.2.9h16.3c.6 0 1.1-.4 1.3-.9l.6-3.1c.1-.5-.2-1.2-.7-1.5z" /></svg> <span>Change file</span></label>
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Current photo", htmlAttributes: new { @class = "control-label col-md-2" })

                    <div>

                        @Html.Image(Model.Img, new { @class = "or" })
                    </div>

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Contains_Meat, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Contains_Meat)
                            @Html.ValidationMessageFor(model => model.Contains_Meat, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Contains_Milk, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Contains_Milk)
                            @Html.ValidationMessageFor(model => model.Contains_Milk, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Contains_Sugar, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Contains_Sugar)
                            @Html.ValidationMessageFor(model => model.Contains_Sugar, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-success" />
                    </div>
                </div>
            </div>
        }
        <div>
            @Html.ActionLink("Back to List", "ShowDish")
        </div>
    </div>
    @Scripts.Render("~/Scripts/AddFile.js")
</div>
